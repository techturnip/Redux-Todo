{"version":3,"sources":["components/Todo.js","actions.js","components/TodoList.js","components/AddTodo.js","App.js","reducer.js","index.js"],"names":["Todo","handleClick","currentTodo","_this","props","todos","todoId","toggleCompleted","completed","todo","this","react_default","a","createElement","className","concat","lib","onClick","Component","mapDispatchToProps","bool","id","type","payload","connect","state","clearCompleted","length","s","map","i","components_Todo","key","AddTodo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","submitHandler","e","preventDefault","addTodo","setState","changeHandler","target","value","onSubmit","name","placeholder","onChange","required","waves","right","App","date","Date","brand","centerLogo","components_TodoList","components_AddTodo","getFullYear","initialState","persistConfig","storage","persistedReducer","persistReducer","arguments","undefined","action","newTodoList","objectSpread","_action$payload","todoList","clearedList","filter","console","log","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.240e222e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { toggleCompleted } from '../actions'\nimport { Button } from 'react-materialize'\n\nclass Todo extends Component {\n  handleClick = () => {\n    const currentTodo = this.props.todos[this.props.todoId]\n    this.props.toggleCompleted(currentTodo.completed, this.props.todoId)\n  }\n\n  render() {\n    const todo = this.props.todos[this.props.todoId]\n\n    return (\n      <li\n        className={`card flex${\n          todo.completed ? ' teal lighten-2 completed' : ''\n        }`}\n      >\n        <span>{todo.todo}</span>\n        <Button onClick={this.handleClick}>\n          {!todo.completed ? 'Complete' : 'Undo'}\n        </Button>\n      </li>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  }\n}\n\nconst mapDispatchToProps = {\n  toggleCompleted: toggleCompleted\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todo)\n","// Define Action Types\nexport const ADD_TODO = 'ADD_TODO'\nexport const TOGGLE_COMPLETED = 'TOGGLE_COMPLETED'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\n\n// Define Action Creators\nexport const addTodo = todo => {\n  return {\n    type: ADD_TODO,\n    payload: { todo }\n  }\n}\n\nexport const toggleCompleted = (bool, id) => {\n  return {\n    type: TOGGLE_COMPLETED,\n    payload: { bool, id }\n  }\n}\n\nexport const clearCompleted = () => {\n  return {\n    type: CLEAR_COMPLETED\n  }\n}\n","import React from 'react'\nimport Todo from './Todo'\nimport { connect } from 'react-redux'\nimport { clearCompleted } from '../actions'\nimport { Card, Row, Col, Button } from 'react-materialize'\n\nconst TodoList = props => {\n  const { todos } = props\n\n  return (\n    <Card className=\"todo-list\">\n      <Row className=\"todo-list-header\">\n        <Col>\n          <h4>Your Todo List:</h4>\n        </Col>\n        {todos.length ? (\n          <Col s={3}>\n            <Button onClick={() => props.clearCompleted()}>\n              Clear Completed\n            </Button>\n          </Col>\n        ) : (\n          <span />\n        )}\n      </Row>\n\n      <Row>\n        <ul>\n          {todos.length ? (\n            todos.map((todo, i) => <Todo key={i} todoId={i} />)\n          ) : (\n            <li className=\"card flex\">You don't have anything to do.</li>\n          )}\n        </ul>\n      </Row>\n    </Card>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: state.todos\n  }\n}\n\nconst mapDispatchToProps = {\n  clearCompleted: clearCompleted\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","import React, { Component } from 'react'\nimport { Button, Icon, TextInput } from 'react-materialize'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\nclass AddTodo extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      todo: '',\n      completed: false\n    }\n  }\n\n  submitHandler = e => {\n    e.preventDefault()\n\n    this.props.addTodo(this.state)\n\n    this.setState({\n      todo: ''\n    })\n  }\n\n  changeHandler = e => {\n    this.setState({\n      todo: e.target.value\n    })\n  }\n\n  render() {\n    const { todo } = this.state\n    return (\n      <div className=\"card\">\n        <h5>Add Todo:</h5>\n\n        <form onSubmit={this.submitHandler}>\n          <TextInput\n            type=\"text\"\n            name=\"todo\"\n            placeholder=\"Add a todo\"\n            value={todo}\n            onChange={this.changeHandler}\n            required\n          />\n\n          <Button type=\"submit\" waves=\"light\">\n            Submit\n            <Icon right>send</Icon>\n          </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  addTodo: addTodo\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(AddTodo)\n","import React from 'react'\nimport TodoList from './components/TodoList'\nimport AddTodo from './components/AddTodo'\nimport { Navbar } from 'react-materialize'\n\nfunction App() {\n  const date = new Date()\n\n  return (\n    <div className=\"container\">\n      <Navbar brand={<span>Redux Todo App</span>} centerLogo />\n      <TodoList />\n      <AddTodo />\n      <div className=\"card center-align\">\n        Tyler Turnipseed &copy; {`${date.getFullYear()}`}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ADD_TODO, TOGGLE_COMPLETED, CLEAR_COMPLETED } from './actions'\n\n// all state values need an initial value\nconst initialState = {\n  todos: []\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      const { todo } = action.payload\n      const newTodoList = state.todos.concat([todo])\n\n      return {\n        ...state,\n        todos: newTodoList\n      }\n    case TOGGLE_COMPLETED:\n      const { bool, id } = action.payload\n      const todoList = state.todos.map(todo => todo)\n      todoList[id].completed = !bool\n\n      return {\n        ...state,\n        todos: todoList\n      }\n    case CLEAR_COMPLETED:\n      const clearedList = state.todos.filter(todo => !todo.completed)\n      console.log(clearedList)\n\n      return {\n        ...state,\n        todos: clearedList\n      }\n\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'materialize-css/dist/css/materialize.min.css'\nimport './index.css'\nimport App from './App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport reducer from './reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n// Create Redux Store\nconst store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\nconst persistor = persistStore(store)\n\n// Wrap <App /> with <Provider /> and bring in the store\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}